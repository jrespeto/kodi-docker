
services:

  openvpn-client:
    container_name: openvpn-client
    profiles:
      - vpn
    build:
      context: .
      dockerfile: Docker/Dockerfile-ovpn
    cap_add:
      - NET_ADMIN  # Needed to create the TUN device
    devices:
      - /dev/net/tun  # Required by OpenVPN
    restart: unless-stopped
    volumes:
      - ./ovpn-config/client.ovpn:/etc/openvpn/client.conf:ro

  m3u-gen:
    build:
      context: .
      dockerfile: Docker/Dockerfile-m3u-gen
    container_name: m3u-gen
    profiles:
      - kodi
      - vpn
    env_file:
      - m3u-gen.env
    volumes:
    - ./kodi_home/m3u_gen:/data

  kodi:
    build:
      context: .
      dockerfile: Docker/Dockerfile
    container_name: kodi
    profiles:
      - kodi
      - vpn
    environment:
      DISPLAY: "${DISPLAY}"
      PULSE_SERVER: "${PULSE_SERVER}"
      WAYLAND_DISPLAY: ${WAYLAND_DISPLAY}
      XDG_RUNTIME_DIR: ${XDG_RUNTIME_DIR}
      TZ: America/New_York
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - ${XDG_RUNTIME_DIR}/${WAYLAND_DISPLAY}:${XDG_RUNTIME_DIR}/${WAYLAND_DISPLAY}
      - /run/user/1000/pulse/native:/run/user/1000/pulse/native
      - ./kodi_home/.kodi:/root/.kodi
      - ./kodi_home/m3u_gen:/root/m3u_gen
    devices:
      - /dev/dri
      - nvidia.com/gpu=all
    group_add:
      - video
    security_opt:
      - label=type:container_runtime_t
      - seccomp=unconfined
      - apparmor=unconfined
    network_mode: ${KODI_NETWORK_MODE:-bridge}
    restart: unless-stopped

